{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/servers/servers.component.ts","./src/app/components/servers/servers.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>servers works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title:string = 'YouKnow';\n}\n","<div>\n\n  <mat-toolbar>\n    <mat-icon>self_improvement</mat-icon>\n    <span>{{title}}</span>\n    <span class=\"example-spacer\"></span>\n    <!-- Server Menu -->\n    <button mat-button aria-label=\"Servers\">\n      <mat-icon>desktop_mac</mat-icon>\n      <span> Servers</span>\n    </button>\n\n    <!-- Operations Menu -->\n\n    <button mat-button [matMenuTriggerFor]=\"operationsMenu\" aria-label=\"Operations\">\n      <mat-icon>engineering</mat-icon>\n      <span> Operations</span>\n    </button>\n    <mat-menu #operationsMenu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>shutter_speed</mat-icon>\n        <span> Watch Realtime</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>switch_camera</mat-icon>\n        <span> Compare Realtime</span>\n      </button>\n    </mat-menu>\n\n    <!-- Performance Menu -->\n    <button mat-button [matMenuTriggerFor]=\"performanceMenu\" aria-label=\"Performance\">\n      <mat-icon>auto_graph</mat-icon>\n      <span> Performance</span>\n    </button>\n    <mat-menu #performanceMenu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>shutter_speed</mat-icon>\n        <span> Single Server</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>switch_camera</mat-icon>\n        <span> Comparison between 2 Servers</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>analytics</mat-icon>\n        <span> Performance Deep Analysis</span>\n      </button>\n    </mat-menu>\n\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>\n  <app-servers></app-servers>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ServersComponent } from './components/servers/servers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatMenuModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}