{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/servers/servers.component.ts","./src/app/components/servers/servers.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/server/server.component.ts","./src/app/components/server/server.component.html","./src/app/material/material.module.ts","./src/app/models/server.ts","./src/app/app-routing.module.ts","./src/app/services/servers.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACZnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AACf;AACF;;;;;;;;ICKrD,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;IACnD,yEAAwC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAK7D,yEAAuC;IAAA,+DAAG;IAAA,4DAAK;;;IAC/C,yEAAwC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAKvD,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEAAwC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAK9D,yEAAuC;IAAA,qEAAS;IAAA,4DAAK;;;IACrD,yEAAwC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAK7D,oEAA4C;;;IAC5C,yEACE;IAAA,6EACE;IAAA,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC7B,4DAAS;IACX,4DAAK;;;IAKL,oEAA4C;;;IAC5C,yEACE;IAAA,6EACE;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;IACX,4DAAK;;;IAKL,oEAA4C;;;IAC5C,yEACE;IAAA,6EACE;IAAA,2EAAU;IAAA,uEAAY;IAAA,4DAAW;IACnC,4DAAS;IACX,4DAAK;;;IAGP,oEAA4D;;;IAC5D,oEAAkE;;;ADnD/D,MAAM,gBAAgB;IAM3B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QALlD,qBAAgB,GAAa,EAAE,CAAC;QAM9B,kCAAkC;IACpC,CAAC;IAED,QAAQ;IAER,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnD,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAC,QAAQ,EAAC,MAAM,EAAE,OAAO,CAAC;YAC5F,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAS,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,CAAC,CAAC;IAEL,CAAC;;gFArBU,gBAAgB;gGAAhB,gBAAgB;kEAIhB,wEAAY;;;;;QCXzB,yEACE;QAAA,2EAEE;QACA,2EACE;QAAA,0GAAmD;QACnD,0GAAkE;QACpE,qEAAe;QAGf,2EACE;QAAA,0GAA+C;QAC/C,0GAA4D;QAC9D,qEAAe;QAGf,2EACE;QAAA,0GAAiD;QACjD,4GAAmE;QACrE,qEAAe;QAGf,4EACE;QAAA,4GAAqD;QACrD,4GAAkE;QACpE,qEAAe;QAGf,4EACE;QAAA,4GAA4C;QAC5C,4GAIK;QACP,qEAAe;QAGf,4EACE;QAAA,4GAA4C;QAC5C,4GAIK;QACP,qEAAe;QAGf,6EACE;QAAA,4GAA4C;QAC5C,4GAIK;QACP,qEAAe;QAEf,6GAA4D;QAC5D,6GAAkE;QACpE,4DAAQ;QAER,gFAAoF;QACtF,4DAAM;;QA7Da,0DAAyB;QAAzB,sFAAyB;QAwDpB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG9C,0DAA+B;QAA/B,kJAA+B;;6FDtDnC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;wHAK0B,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEhBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAU,SAAS,CAAC;KAC1B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEAEE;QAAA,8EACE;QAAA,2EAAU;QAAA,2EAAgB;QAAA,4DAAW;QACrC,uEAAM;QAAA,uDAAS;QAAA,4DAAO;QACtB,qEAAoC;QAEpC,4EACE;QAAA,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QAChC,wEAAO;QAAA,oEAAO;QAAA,4DAAO;QACvB,4DAAS;QAIT,6EACE;QAAA,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAChC,wEAAO;QAAA,uEAAU;QAAA,4DAAO;QAC1B,4DAAS;QACT,qFACE;QAAA,6EACE;QAAA,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QAClC,wEAAO;QAAA,2EAAc;QAAA,4DAAO;QAC9B,4DAAS;QACT,6EACE;QAAA,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QAClC,wEAAO;QAAA,6EAAgB;QAAA,4DAAO;QAChC,4DAAS;QACX,4DAAW;QAGX,6EACE;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAC/B,wEAAO;QAAA,wEAAW;QAAA,4DAAO;QAC3B,4DAAS;QACT,qFACE;QAAA,6EACE;QAAA,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QAClC,wEAAO;QAAA,0EAAa;QAAA,4DAAO;QAC7B,4DAAS;QACT,6EACE;QAAA,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QAClC,wEAAO;QAAA,yFAA4B;QAAA,4DAAO;QAC5C,4DAAS;QACT,6EACE;QAAA,4EAAU;QAAA,qEAAS;QAAA,4DAAW;QAC9B,wEAAO;QAAA,sFAAyB;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAW;QAEX,6EACE;QAAA,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC/B,4DAAS;QACT,6EACE;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACX,4DAAc;QACd,0EAA2B;QAC7B,4DAAM;;;;QArDI,0DAAS;QAAT,0EAAS;QAUI,0DAAoC;QAApC,kFAAoC;QAgBpC,2DAAqC;QAArC,kFAAqC;;6FDvB/C,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACA;AACT;AACgC;AACnB;AACc;AACH;;AAkBhE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,wEAAc;YACd,qEAAgB;SACjB;mIAIU,SAAS,mBAdlB,2DAAY;QACZ,sFAAgB;QAChB,mFAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,wEAAc;QACd,qEAAgB;6FAKP,SAAS;cAhBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sFAAgB;oBAChB,mFAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,wEAAc;oBACd,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAyD;AACV;;AAOxC,MAAM,eAAe;IAG1B;QAFS,WAAM,GAAW,IAAI,qDAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAG1E,CAAC;IAHyE,CAAC;IAK3E,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCR5B,oEAAG;QAAA,gEAAK;QAAA,4DAAI;QACZ,oEAAG;QAAA,uDAAmB;QAAA,4DAAI;QAC1B,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACpB,oEAAG;QAAA,uDAAoB;QAAA,4DAAI;QAC3B,oEAAG;QAAA,uDAAmB;QAAA,4DAAI;QAC1B,qEAAG;QAAA,wDAA4B;QAAA,4DAAI;QACnC,qEAAG;QAAA,wDAAwB;QAAA,4DAAI;QAC/B,qEAAG;QAAA,wDAA0B;QAAA,4DAAI;;QAN9B,0DAAmB;QAAnB,oFAAmB;QACnB,0DAAa;QAAb,8EAAa;QACb,0DAAoB;QAApB,qFAAoB;QACpB,0DAAmB;QAAnB,oFAAmB;QACnB,0DAA4B;QAA5B,6FAA4B;QAC5B,0DAAwB;QAAxB,yFAAwB;QACxB,0DAA0B;QAA1B,2FAA0B;;6FDChB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;sCAEU,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACkB;AACE;AACN;AACA;AACE;AACM;;AAE/D,MAAM,kBAAkB,GAAG;IACzB,wEAAe;IACf,oEAAa;IACb,0EAAgB;IAChB,oEAAa;IACb,sEAAc;IACd,8EAAkB;CACnB,CAAC;AAMK,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAHhB,CAAC,kBAAkB,CAAC,EAT7B,wEAAe;QACf,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,sEAAc;QACd,8EAAkB;mIAOP,cAAc,cAZzB,wEAAe;QACf,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,sEAAc;QACd,8EAAkB,aALlB,wEAAe;QACf,oEAAa;QACb,0EAAgB;QAChB,oEAAa;QACb,sEAAc;QACd,8EAAkB;6FAOP,cAAc;cAJ1B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,kBAAkB,CAAC;gBAC7B,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;;;;;;;;;;;;ACpBD;AAAA;AAAO,MAAM,MAAM;IASjB,YAAY,QAAgB,EAAE,EAAU,EAAE,SAAiB,EAAE,QAAgB,EAC3E,iBAAyB,EAAE,aAAuB,EAAE,eAAuB;QAC3E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;CACF;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,sCAAsC,CAAC,CAAC;IACzE,CAAC;;4EANU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Server } from './../../models/server';\nimport { ServersService } from './../../services/servers.service';\n\nimport { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements AfterViewInit, OnInit {\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<Server>;//([]);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private serversService: ServersService) {\n    //this.paginator = this.paginator;\n  }\n\n  ngOnInit() {\n    \n  }\n\n  ngAfterViewInit() {\n    this.serversService.getServers().subscribe(servers => {\n      this.displayedColumns = ['agent_id', 'ip', 'cpu_count', 'platform','delete','edit', 'watch']\n      this.dataSource = new MatTableDataSource<Server>(servers);\n      this.dataSource.paginator = this.paginator;\n    });\n    \n  }\n}\n\n\n// this.serversService.getServers().subscribe(servers => {\n//   this.dataSource = new MatTableDataSource<Server>(servers);\n//   this.dataSource.paginator = this.paginator;\n// }); ","<!-- <div *ngFor=\"let server of servers\">\n  <app-server  [server]=\"server\">\n  </app-server>\n</div> -->\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"agent_id\">\n      <th mat-header-cell *matHeaderCellDef> Server </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.agent_id}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"ip\">\n      <th mat-header-cell *matHeaderCellDef> IP </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.ip}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"cpu_count\">\n      <th mat-header-cell *matHeaderCellDef> CPUs </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.cpu_count}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"platform\">\n      <th mat-header-cell *matHeaderCellDef> Platform </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.platform}} </td>\n    </ng-container>\n\n    <!-- Delete Column -->\n    <ng-container matColumnDef=\"delete\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Detach the server\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- Edit Column -->\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Edit the server\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- Edit Column -->\n    <ng-container matColumnDef=\"watch\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Watch the server\">\n          <mat-icon>insert_chart</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title:string = 'YouKnow';\n}\n","<div>\n\n  <mat-toolbar>\n    <mat-icon>self_improvement</mat-icon>\n    <span>{{title}}</span>\n    <span class=\"example-spacer\"></span>\n    <!-- Server Menu -->\n    <button mat-button aria-label=\"Servers\">\n      <mat-icon>desktop_mac</mat-icon>\n      <span> Servers</span>\n    </button>\n\n    <!-- Operations Menu -->\n\n    <button mat-button [matMenuTriggerFor]=\"operationsMenu\" aria-label=\"Operations\">\n      <mat-icon>engineering</mat-icon>\n      <span> Operations</span>\n    </button>\n    <mat-menu #operationsMenu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>shutter_speed</mat-icon>\n        <span> Watch Realtime</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>switch_camera</mat-icon>\n        <span> Compare Realtime</span>\n      </button>\n    </mat-menu>\n\n    <!-- Performance Menu -->\n    <button mat-button [matMenuTriggerFor]=\"performanceMenu\" aria-label=\"Performance\">\n      <mat-icon>auto_graph</mat-icon>\n      <span> Performance</span>\n    </button>\n    <mat-menu #performanceMenu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>shutter_speed</mat-icon>\n        <span> Single Server</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>switch_camera</mat-icon>\n        <span> Comparison between 2 Servers</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>analytics</mat-icon>\n        <span> Performance Deep Analysis</span>\n      </button>\n    </mat-menu>\n\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>\n  <app-servers></app-servers>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ServersComponent } from './components/servers/servers.component';\nimport { ServerComponent } from './components/server/server.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServersComponent,\n    ServerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Server } from './../../models/server';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit {\n  @Input() server: Server = new Server('NOC', '12', 1, '212', 22, [], 3333);;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>HELLO</p>\n<p>{{server.agent_id}}</p>\n<p>{{server.ip}}</p>\n<p>{{server.cpu_count}}</p>\n<p>{{server.platform}}</p>\n<p>{{server.stats_interval_ms}}</p>\n<p>{{server.watch_process}}</p>\n<p>{{server.last_updated_ts}}</p>","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatMenuModule,\n  MatTableModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule { }\n","export class Server {\n  agent_id: string;\n  ip: string;\n  cpu_count: number;\n  platform: string;\n  stats_interval_ms: number;\n  watch_process: string[];\n  last_updated_ts: number;\n\n  constructor(agent_id: string, ip: string, cpu_count: number, platform: string,\n    stats_interval_ms: number, watch_process: string[], last_updated_ts: number) {\n    this.agent_id = agent_id;\n    this.ip = ip;\n    this.cpu_count = cpu_count;\n    this.platform = platform;\n    this.stats_interval_ms = stats_interval_ms;\n    this.watch_process = watch_process;\n    this.last_updated_ts = last_updated_ts;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Server } from './../models/server';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServersService {\n\n  constructor(private http: HttpClient) { }\n\n  getServers(): Observable<Server[]> {\n    return this.http.get<Server[]>('http://localhost:2600/web/agent/list');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}