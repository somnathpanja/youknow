{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/components/servers/servers.component.ts","webpack:///src/app/components/servers/servers.component.html","webpack:///src/app/components/server-config/server-config.component.ts","webpack:///src/app/components/server-config/server-config.component.html","webpack:///src/app/services/ws.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/server/server.component.ts","webpack:///src/app/components/server/server.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/models/server.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/servers.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","ServersComponent","serversService","configDialog","router","displayedColumns","dataSource","getServers","subscribe","servers","paginator","server","self","oldServer","selectedServer","clone","dialogRef","open","data","width","height","afterClosed","result","updateServer","agent_id","then","console","log","err","navigateByUrl","addServer","addNewServer","selector","templateUrl","styleUrls","ServerConfigComponent","property","e","target","value","setServerProperty","$event","Event","WsService","callbacks","events","window","location","host","ws","packet","onMessage","cmd","callback","token","next","event","action","call","providedIn","AppComponent","title","google","charts","load","packages","AppModule","declarations","imports","providers","bootstrap","NavBarComponent","SJ","SilverJs","Chart","ServerComponent","route","wsService","idealCPUInPercent","cornerRadius","shadowEnabled","borderThickness","queryParams","params","getServer","setOnLoadCallback","createCPUGraph","createLoadAvgGraph","createRamGraph","createSwapMemGraph","createDiskGraph","createCpu4ProcessGraph","attachEvent","updateCPUGraph","updateCPU4ProcessGraph","updateLoadAvgGraph","updateRAMGraph","updateSwapMemGraph","updateDiskGraph","cpu4ProcessGraph","border","bevel","shadow","borderColor","dataPointWidthInPercent","padding","axesY","max","min","axisLineThickness","axesX","cpuChart","visible","interval","tickLength","loadAvgChart","titles","text","fontSize","fontWeight","tickEnabled","ramGraph","valueFormat","valueFormatRange","swapMemGraph","diskGraph","includeZero","labelFont","chartData","name","plotAs","tooltipText","points","lines","forEach","process","push","xLabel","app","yValue","cpu_percent","mem_used_percent","setData","render","labelEnabled","sys","cpu_st","cpu_wa","cpu_id","cpu_sy","cpu_us","ds","labelText","color","load_avg1","load_avg5","load_avg15","Math","mem_buff_cache","mem_free","mem_used","mem_total","mem_swap_avail","mem_swap_free","mem_swap_used","mem_swap_total","disk_free","disk_used","disk_total","url","body","document","script","createElement","innerHTML","src","async","defer","appendChild","MaterialComponents","MaterialModule","exports","Server","ip","details","cpu_count","platform","stats_interval_ms","watch_process","last_updated_ts","routes","path","component","AppRoutingModule","forRoot","ServersService","http","protocol","get","post","pipe","handleError","toPromise","error","ErrorEvent","message","status","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWM;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAG;;;;;;AAC1C;;AAAwC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAKxC;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;;;;;AACA;;AACE;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;;;;;;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAChE;;AAAU;;AAAI;;AAChB;;AACF;;;;;;AAKA;;;;;;;;AACA;;AACE;;AAAmE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AAAU;;AAAY;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;UDtDSC,gB;AAOX,kCAAoBC,cAApB,EACSC,YADT,EAEUC,MAFV,EAE0B;AAAA;;AAFN,eAAAF,cAAA,GAAAA,cAAA;AACX,eAAAC,YAAA,GAAAA,YAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AANV,eAAAC,gBAAA,GAA6B,EAA7B;AACA,eAAAC,UAAA,GAAyC,IAAI,0EAAJ,CAA+B,EAA/B,CAAzC;AAMC;;;;qCAEU,CACV;;;4CAEiB;AAAA;;AAChB,iBAAKJ,cAAL,CAAoBK,UAApB,GAAiCC,SAAjC,CAA2C,UAAAC,OAAO,EAAI;AACpD,mBAAI,CAACJ,gBAAL,GAAwB,CAAC,UAAD,EAAa,IAAb,EAAmB,SAAnB,EAA8B,WAA9B,EAA2C,UAA3C,EAAuD,QAAvD,EAAiE,MAAjE,EAAyE,OAAzE,CAAxB;AACA,mBAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAA+BG,OAA/B,CAAlB;AACA,mBAAI,CAACH,UAAL,CAAgBI,SAAhB,GAA4B,KAAI,CAACA,SAAjC;AACD,aAJD;AAKD;;;+CAEoBC,M,EAAgB;AAAA;;AACnC,gBAAIC,IAAI,GAAG,IAAX;AACA,iBAAKC,SAAL,GAAiBF,MAAjB;AACA,iBAAKG,cAAL,GAAsB,sDAAOC,KAAP,CAAaJ,MAAb,CAAtB;AACA,gBAAMK,SAAS,GAAG,KAAKb,YAAL,CAAkBc,IAAlB,CAAuB,4FAAvB,EAA8C;AAC9DC,kBAAI,EAAE,KAAKJ,cADmD;AAE9DK,mBAAK,EAAE,KAFuD;AAG9D;AACAC,oBAAM,EAAE;AAJsD,aAA9C,CAAlB;AAOAJ,qBAAS,CAACK,WAAV,GAAwBb,SAAxB,CAAkC,UAAAc,MAAM,EAAI;AAC1C,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAACpB,cAAL,CAAoBqB,YAApB,CAAiC,MAAI,CAACV,SAAL,CAAeW,QAAhD,EAAoE,MAAI,CAACV,cAAzE,EAAyFW,IAAzF,CAA8F,UAAAP,IAAI,EAAI;AACpGQ,yBAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,wBAAI,CAACL,SAAL,GAAiB,MAAI,CAACC,cAAtB;AACD,iBAHD,WAGS,UAAAc,GAAG,EAAI;AACdF,yBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAtB;AACD,iBALD;AAMD;AACF,aATD;AAUD;;;uCAEYjB,M,EAAgB;AAC3B,iBAAKP,MAAL,CAAYyB,aAAZ,CAA0B,sBAAsBlB,MAAM,CAACa,QAAvD;AACD;;;yCAEc;AAAA;;AACb,iBAAKV,cAAL,GAAsB,sDAAOC,KAAP,CAAa,EAAb,CAAtB;AAEA,gBAAMC,SAAS,GAAG,KAAKb,YAAL,CAAkBc,IAAlB,CAAuB,4FAAvB,EAA8C;AAC9DC,kBAAI,EAAE,KAAKJ;AADmD,aAA9C,CAAlB;AAOAE,qBAAS,CAACK,WAAV,GAAwBb,SAAxB,CAAkC,UAAAc,MAAM,EAAI;AAC1C,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAACpB,cAAL,CAAoB4B,SAApB,CAA8B,MAAI,CAAChB,cAAnC,EAAmDW,IAAnD,CAAwD,UAAAP,IAAI,EAAI;AAC9DQ,yBAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,iBAFD,WAES,UAAAU,GAAG,EAAI;AACdF,yBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAtB;AACD,iBAJD;AAKD;AACF,aARD;AASD;;;;;;;yBArEU3B,gB,EAAgB,yI,EAAA,mI,EAAA,uH;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA;AAAA;sEAKhB,wE,EAAY,I;;;;;;;;;;;;;;AChBzB;;AACE;;AAAmB;AAAA,qBAAS,IAAA8B,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAW;;AACvD;;AAGE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAKF;;AAGA;;AACE;;AACA;;AAKF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;AAEA;;AACF;;;;AAnEmB;;AAAA;;AA8DK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDzDJ9B,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACT+B,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;AAKFxB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AErBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUayB,qB;AACX,uCAA4CxB,MAA5C,EAA4D;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAC1C,eAAKA,MAAL,GAAcA,MAAd;AACD;;;;qCAEO,CACP;;;4CAEiByB,Q,EAAkBC,C,EAAU;AAC3C,iBAAK1B,MAAL,CAAoByB,QAApB,IAAiCC,CAAC,CAACC,MAAF,CAA8BC,KAA/D;AACF;;;;;;;yBAVUJ,qB,EAAqB,gEACZ,wEADY,C;AACG,O;;;cADxBA,qB;AAAqB,0C;AAAA,iB;AAAA,e;AAAA,we;AAAA;AAAA;ACVlC;;AAAqB;;AAAa;;AAClC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAyB;;AACpC;;AAA0D;AAAA,qBAAU,IAAAK,iBAAA,CAAkB,UAAlB,EAA8BC,MAA9B,CAAV;AAA+C,aAA/C;;AAA1D;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AAAoD;AAAA,qBAAU,IAAAD,iBAAA,CAAkB,IAAlB,EAAwBC,MAAxB,CAAV;AAAyC,aAAzC;;AAApD;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AAAyC;AAAA,qBAAU,IAAAD,iBAAA,CAAkB,SAAlB,EAA6BC,MAA7B,CAAV;AAA8C,aAA9C;;AAAzC;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAsB;;AACjC;;AAAmD;AAAA,qBAAU,IAAAD,iBAAA,CAAkB,mBAAlB,EAAuCC,MAAvC,CAAV;AAAwD,aAAxD;;AAAnD;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AAA+C;AAAA,qBAAU,IAAAD,iBAAA,CAAkB,eAAlB,EAAmCC,MAAnC,CAAV;AAAoD,aAApD;;AAA/C;;AACF;;AACF;;AAEF;;AACF;;AACF;;AACA;;AACE;;AAAoC;;AAAM;;AAC1C;;AAA6D;;AAAK;;AACpE;;;;AApC0B;;AAAA;;AAMgB;;AAAA;;AAOhB;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;;;;;;;;wEDhCRN,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTH,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;oBACnB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEXtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,UAAKQ,KAAL;;AAAA,iBAAKA,KAAL,EAAU;AACR;AACA;AACA;AACA;AACD,OALD,EAAKA,KAAK,KAALA,KAAK,MAAV;;UAUaC,S;AAMX,6BAAc;AAAA;;AAAA;;AAJd,eAAAC,SAAA,GAA4C,EAA5C;AACA,eAAAC,MAAA,GAAoC,EAApC;AAIE,eAAKD,SAAL,GAAiB,EAAjB;AACA,eAAKC,MAAL,GAAc,EAAd;AACAnB,iBAAO,CAACC,GAAR,CAAYmB,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,eAAKA,IAAL,GAAY,WAAYF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,gBAA1B,GAA8C,gBAA9C,GAAiEF,MAAM,CAACC,QAAP,CAAgBC,IAA5F,CAAZ;AACA,eAAKC,EAAL,GAAU,iEAAU,KAAKD,IAAL,GAAY,aAAtB,CAAV;AACA,eAAKJ,SAAL,GAAiB,EAAjB;AACA,eAAKC,MAAL,GAAc,EAAd;AAEA,eAAKI,EAAL,CAAQzC,SAAR,CACE,UAAC0C,MAAD,EAAW;AAAC,kBAAI,CAACC,SAAL,CAAeD,MAAf;AAAuB,WADrC,EAEE,UAAAtB,GAAG;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,WAFL,EAE2B;AACzB,sBAAM;AAAEF,mBAAO,CAACC,GAAR,CAAY,UAAZ;AAA0B,WAHpC,CAGqC;AAHrC;AAKD;AAED;;;;;;;;;+BAKYyB,G,EAAalC,I,EAAcmC,Q,EAAsB;AAC3D,gBAAIH,MAAM,GAAG;AAAEI,mBAAK,EAAE,iDAAT;AAAmBF,iBAAG,EAAHA,GAAnB;AAAwBlC,kBAAI,EAAJA;AAAxB,aAAb;AACA,iBAAK+B,EAAL,CAAQM,IAAR,CAAarC,IAAb;AACA,iBAAK0B,SAAL,CAAeM,MAAM,CAACI,KAAtB,IAA+BD,QAA/B;AACD;AAED;;;;;;;;sCAKmBG,K,EAAehC,Q,EAAkB6B,Q,EAAoB;AACtE,iBAAKR,MAAL,CAAYW,KAAZ,IAAqBH,QAArB;AACA,iBAAKJ,EAAL,CAAQM,IAAR,CAAa;AAAEC,mBAAK,EAALA,KAAF;AAAShC,sBAAQ,EAARA,QAAT;AAAmBiC,oBAAM,EAAE;AAA3B,aAAb;AACD;AAED;;;;;;;;sCAKmBD,K,EAAe;AAChC,mBAAO,KAAKX,MAAL,CAAYW,KAAZ,CAAP;AACA,iBAAKP,EAAL,CAAQM,IAAR,CAAa;AAAEC,mBAAK,EAALA,KAAF;AAASC,oBAAM,EAAE;AAAjB,aAAb;AACD;;;oCAEiBP,M,EAAa;AAC7B,gBAAIA,MAAM,CAACI,KAAX,EAAkB;AAChB,mBAAKV,SAAL,CAAeM,MAAM,CAACI,KAAtB,EAA6BI,IAA7B,CAAkCR,MAAM,CAAChC,IAAzC;AACA,qBAAO,KAAK0B,SAAL,CAAeM,MAAM,CAACI,KAAtB,CAAP;AACD,aAHD,MAGO,IAAI,KAAKT,MAAL,CAAYK,MAAM,CAACM,KAAnB,CAAJ,EAA+B;AAAE;AACtC,mBAAKX,MAAL,CAAYK,MAAM,CAACM,KAAnB,EAA0BE,IAA1B,CAA+B,IAA/B,EAAqCR,MAAM,CAAChC,IAA5C;AACD;AACF;;;;;;;yBA5DUyB,S;AAAS,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACVgB,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;ACxBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y;AALb;AAAA;;AAME,eAAAC,KAAA,GAAgB,SAAhB;AASD;;;;qCAPS;AACNC,kBAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAEC,sBAAQ,EAAE,CAAC,WAAD,EAAc,KAAd;AAAZ,aAA9B;AACD;;;4CAEc,CAEd;;;;;;;yBATUL,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,8B;AAAA;AAAA;ACPzB;;AAIE;;AACA;;AAEF;;;;AAHe;;AAAA;;;;;;;;;wEDGFA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT5B,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA8BagC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,wEAJO,EAKP,qEALO,CAOI;;;;4HAGFA,S,EAAS;AAAA,yBAhBlB,2DAgBkB,EAflB,sFAekB,EAdlB,mFAckB,EAblB,qFAakB,EAZlB,wGAYkB;AAZG,oBAGrB,uEAHqB,EAIrB,oEAJqB,EAKrB,4FALqB,EAMrB,wEANqB,EAOrB,qEAPqB;AAYH,S;AALF,O;;;;;wEAKPA,S,EAAS;gBAlBrB,sDAkBqB;iBAlBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,sFAFY,EAGZ,mFAHY,EAIZ,qFAJY,EAKZ,wGALY,CADN;AAQRC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,wEAJO,EAKP,qEALO,CARD;AAeRC,qBAAS,EAAE,EAfH;AAgBRC,qBAAS,EAAE,CAAC,2DAAD;AAhBH,W;AAkBY,U;;;;;;;;;;;;;;;;;;AC9BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,e;AAEX,mCAAc;AAAA;;AADL,eAAAV,KAAA,GAAgB,EAAhB;AACQ;;;;qCAET,CACP;;;;;;;yBALUU,e;AAAe,O;;;cAAfA,e;AAAe,oC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,oiB;AAAA;AAAA;ACP5B;;AACE;;AAAU;;AAAgB;;AAC1B;;AAAO;;AAAS;;AAChB;;AACE;;AAA2B;;AAAgD;;AAC7E;;AACA;;AAEA;;AACE;;AAAU;;AAAW;;AACrB;;AAAO;;AAAO;;AAChB;;AAIA;;AACE;;AAAU;;AAAW;;AACrB;;AAAO;;AAAU;;AACnB;;AACA;;AACE;;AACE;;AAAU;;AAAa;;AACvB;;AAAO;;AAAc;;AACvB;;AACA;;AACE;;AAAU;;AAAa;;AACvB;;AAAO;;AAAgB;;AACzB;;AACF;;AAGA;;AACE;;AAAU;;AAAU;;AACpB;;AAAO;;AAAW;;AACpB;;AACA;;AACE;;AACE;;AAAU;;AAAa;;AACvB;;AAAO;;AAAa;;AACtB;;AACA;;AACE;;AAAU;;AAAa;;AACvB;;AAAO;;AAA4B;;AACrC;;AACA;;AACE;;AAAU;;AAAS;;AACnB;;AAAO;;AAAyB;;AAClC;;AACF;;AAEA;;AACE;;AAAU;;AAAQ;;AACpB;;AACA;;AACE;;AAAU;;AAAK;;AACjB;;AACF;;;;;;;;AAtDS;;AAAA;;AAaY;;AAAA;;AAgBA;;AAAA;;;;;;;;;wEDxBRA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTvC,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;AACjB2B,eAAK,EAAE,CAAF;kBAAb;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AERlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;AASA,UAAIW,EAAE,GAAGC,QAAT;AACA,UAAIC,KAAK,GAAGD,QAAQ,CAACC,KAArB;;UAOaC,e;AAeX,iCAAoBC,KAApB,EAAmDxE,MAAnD,EACUyE,SADV,EACwC3E,cADxC,EACwE;AAAA;;AADpD,eAAA0E,KAAA,GAAAA,KAAA;AAA+B,eAAAxE,MAAA,GAAAA,MAAA;AACzC,eAAAyE,SAAA,GAAAA,SAAA;AAA8B,eAAA3E,cAAA,GAAAA,cAAA;AAf/B,eAAAS,MAAA,GAAiB,IAAI,qDAAJ,CAAW,KAAX,EAAkB,EAAlB,EAAsB,IAAtB,EAA4B,CAA5B,EAA+B,KAA/B,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,IAA9C,CAAjB;AACD,eAAAa,QAAA,GAAmB,EAAnB;AACC,eAAAsD,iBAAA,GAA4B,CAA5B;AAQD,eAAAC,YAAA,GAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA9B;AACA,eAAAC,aAAA,GAAyB,IAAzB;AACA,eAAAC,eAAA,GAA0B,IAA1B;AAIP;;;;qCAEO;AAAA;;AACN,iBAAKL,KAAL,CAAWM,WAAX,CAAuB1E,SAAvB,CAAiC,UAAC2E,MAAD,EAAiB;AAChD,oBAAI,CAAC3D,QAAL,GAAgB2D,MAAM,CAAC,UAAD,CAAtB;;AACA,oBAAI,CAACjF,cAAL,CAAoBkF,SAApB,CAA8B,MAAI,CAAC5D,QAAnC,EAA6ChB,SAA7C,CAAuD,UAAAG,MAAM,EAAI;AAC/D,sBAAI,CAACA,MAAL,GAAcA,MAAd;AACD,eAFD;AAGD,aALD;AAMD;;;4CAEiB;AAAA;;AAChB,gBAAIC,IAAI,GAAG,IAAX;AAEAkD,kBAAM,CAACC,MAAP,CAAcsB,iBAAd,CAAgC,YAAM;AACpC,oBAAI,CAACC,cAAL;;AACA,oBAAI,CAACC,kBAAL;;AACA,oBAAI,CAACC,cAAL;;AACA,oBAAI,CAACC,kBAAL;;AACA,oBAAI,CAACC,eAAL;;AACA,oBAAI,CAACC,sBAAL;;AAEA,oBAAI,CAACd,SAAL,CAAee,WAAf,CAA2B,wEAA3B,EAAiD,MAAI,CAACpE,QAAtD,EAAgE,UAAUN,IAAV,EAAqB;AACnFQ,uBAAO,CAACC,GAAR,CAAYT,IAAZ;AAEAN,oBAAI,CAACiF,cAAL,CAAoB3E,IAApB;AACAN,oBAAI,CAACkF,sBAAL,CAA4B5E,IAA5B;AACAN,oBAAI,CAACmF,kBAAL,CAAwB7E,IAAxB;AACAN,oBAAI,CAACoF,cAAL,CAAoB9E,IAApB;AACAN,oBAAI,CAACqF,kBAAL,CAAwB/E,IAAxB;AACAN,oBAAI,CAACsF,eAAL,CAAqBhF,IAArB;AACD,eATD;AAUD,aAlBD;AAmBD;;;mDAEwB;AACvB,iBAAKiF,gBAAL,GAAwB,IAAIzB,KAAJ,CAAU,qBAAV,EAAiC;AACvD;AACA0B,oBAAM,EAAE,KAAKnB,eAF0C;AAGvDoB,mBAAK,EAAE,KAHgD;AAIvDC,oBAAM,EAAE,KAJ+C;AAKvDC,yBAAW,EAAE,OAL0C;AAMvDxB,0BAAY,EAAE,KAAKA,YANoC;AAOvDyB,qCAAuB,EAAE,GAP8B;AAQvDC,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAR8C;AASvD;AACAC,mBAAK,EAAE,CAAC;AACN;AACAC,mBAAG,EAAE,GAFC;AAGNC,mBAAG,EAAE,CAHC;AAIN;AACAC,iCAAiB,EAAE;AALb,eAAD,CAVgD;AAiBvDC,mBAAK,EAAE,CAAC;AACND,iCAAiB,EAAE;AADb,eAAD;AAjBgD,aAAjC,CAAxB;AAqBD;;;2CAEgB;AACf,iBAAKE,QAAL,GAAgB,IAAIrC,KAAJ,CAAU,aAAV,EAAyB;AACvC;AACA0B,oBAAM,EAAE,KAAKnB,eAF0B;AAGvCoB,mBAAK,EAAE,KAHgC;AAIvCC,oBAAM,EAAE,KAAKtB,aAJ0B;AAKvCuB,yBAAW,EAAE,OAL0B;AAMvCxB,0BAAY,EAAE,KAAKA,YANoB;AAOvC0B,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAP8B;AAQvC;AACAC,mBAAK,EAAE,CAAC;AACNM,uBAAO,EAAE,KADH;AAENL,mBAAG,EAAE,GAFC;AAGNC,mBAAG,EAAE,CAHC;AAINK,wBAAQ,EAAE,CAJJ;AAKNJ,iCAAiB,EAAE;AALb,eAAD,CATgC;AAgBvCC,mBAAK,EAAE,CAAC;AACNI,0BAAU,EAAE,CADN;AAENL,iCAAiB,EAAE,GAFb;AAGNhD,qBAAK,EAAE;AAHD,eAAD;AAhBgC,aAAzB,CAAhB;AAsBD;;;+CAEoB;AACnB,iBAAKsD,YAAL,GAAoB,IAAIzC,KAAJ,CAAU,iBAAV,EAA6B;AAC/C;AACA0B,oBAAM,EAAE,KAAKnB,eAFkC;AAG/CoB,mBAAK,EAAE,KAHwC;AAI/CC,oBAAM,EAAE,KAAKtB,aAJkC;AAK/CuB,yBAAW,EAAE,OALkC;AAM/CxB,0BAAY,EAAE,KAAKA,YAN4B;AAO/C0B,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPsC;AAQ/CW,oBAAM,EAAE,CAAC;AAAEC,oBAAI,EAAE,cAAR;AAAwBC,wBAAQ,EAAE,EAAlC;AAAsCC,0BAAU,EAAE,MAAlD;AAA0Dd,uBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAnE,eAAD,CARuC;AAS/CC,mBAAK,EAAE,CAAC;AACNM,uBAAO,EAAE,KADH;AAENQ,2BAAW,EAAE,KAFP;AAGNN,0BAAU,EAAE,CAHN;AAINN,mBAAG,EAAE,CAJC;AAKNK,wBAAQ,EAAE,CALJ;AAMNJ,iCAAiB,EAAE;AANb,eAAD,CATwC;AAiB/CC,mBAAK,EAAE,CAAC;AACNI,0BAAU,EAAE,CADN;AAENL,iCAAiB,EAAE,GAFb;AAGNW,2BAAW,EAAE;AAHP,eAAD;AAjBwC,aAA7B,CAApB;AAuBD;;;2CAEgB;AACf,iBAAKC,QAAL,GAAgB,IAAI/C,KAAJ,CAAU,aAAV,EAAyB;AACvC;AACA0B,oBAAM,EAAE,KAAKnB,eAF0B;AAGvCoB,mBAAK,EAAE,KAHgC;AAIvCC,oBAAM,EAAE,KAAKtB,aAJ0B;AAKvCuB,yBAAW,EAAE,OAL0B;AAMvCxB,0BAAY,EAAE,KAAKA,YANoB;AAOvC0B,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAP8B;AAQvCW,oBAAM,EAAE,CAAC;AAAEC,oBAAI,EAAE,iBAAR;AAA2BC,wBAAQ,EAAE,EAArC;AAAyCC,0BAAU,EAAE;AAArD,eAAD,CAR+B;AASvCb,mBAAK,EAAE,CAAC;AACNM,uBAAO,EAAE,KADH;AAENJ,mBAAG,EAAE,CAFC;AAGNK,wBAAQ,EAAE,CAHJ;AAINS,2BAAW,EAAE,GAJP;AAKNC,gCAAgB,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B;AALZ,eAAD,CATgC;AAgBvCb,mBAAK,EAAE,CAAC;AACND,iCAAiB,EAAE,GADb;AAENK,0BAAU,EAAE,CAFN;AAGNM,2BAAW,EAAE;AAHP,eAAD;AAhBgC,aAAzB,CAAhB;AAsBD;;;+CAEoB;AACnB,iBAAKI,YAAL,GAAoB,IAAIlD,KAAJ,CAAU,cAAV,EAA0B;AAC5C;AACA0B,oBAAM,EAAE,KAAKnB,eAF+B;AAG5CoB,mBAAK,EAAE,KAHqC;AAI5CC,oBAAM,EAAE,KAAKtB,aAJ+B;AAK5CuB,yBAAW,EAAE,OAL+B;AAM5CxB,0BAAY,EAAE,KAAKA,YANyB;AAO5C0B,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPmC;AAQ5CW,oBAAM,EAAE,CAAC;AAAEC,oBAAI,EAAE,aAAR;AAAuBC,wBAAQ,EAAE,EAAjC;AAAqCC,0BAAU,EAAE;AAAjD,eAAD,CARoC;AAS5Cb,mBAAK,EAAE,CAAC;AACNM,uBAAO,EAAE,KADH;AAENQ,2BAAW,EAAE,KAFP;AAGNN,0BAAU,EAAE,CAHN;AAINL,iCAAiB,EAAE,GAJb;AAKNI,wBAAQ,EAAE,CALJ;AAMNL,mBAAG,EAAE,CANC;AAONc,2BAAW,EAAE,GAPP;AAQNC,gCAAgB,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B;AARZ,eAAD,CATqC;AAmB5Cb,mBAAK,EAAE,CAAC;AACNU,2BAAW,EAAE,KADP;AAENN,0BAAU,EAAE,CAFN;AAGNL,iCAAiB,EAAE;AAHb,eAAD;AAnBqC,aAA1B,CAApB;AAyBD;;;4CAEiB;AAChB,iBAAKgB,SAAL,GAAiB,IAAInD,KAAJ,CAAU,cAAV,EAA0B;AACzC;AACA0B,oBAAM,EAAE,KAAKnB,eAF4B;AAGzCoB,mBAAK,EAAE,KAHkC;AAIzCC,oBAAM,EAAE,KAAKtB,aAJ4B;AAKzCuB,yBAAW,EAAE,OAL4B;AAMzCxB,0BAAY,EAAE,KAAKA,YANsB;AAOzC0B,qBAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPgC;AAQzCW,oBAAM,EAAE,CAAC;AAAEC,oBAAI,EAAE,MAAR;AAAgBC,wBAAQ,EAAE,EAA1B;AAA8BC,0BAAU,EAAE;AAA1C,eAAD,CARiC;AASzCb,mBAAK,EAAE,CAAC;AACNM,uBAAO,EAAE,KADH;AAENc,2BAAW,EAAE,IAFP;AAGNlB,mBAAG,EAAE,CAHC;AAINC,iCAAiB,EAAE,GAJb;AAKNa,2BAAW,EAAE,MALP;AAMNC,gCAAgB,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB;AANZ,eAAD,CATkC;AAiBzCb,mBAAK,EAAE,CAAC;AACNU,2BAAW,EAAE,KADP;AAENN,0BAAU,EAAE,CAFN;AAGNL,iCAAiB,EAAE,GAHb;AAINkB,yBAAS,EAAE;AAAET,0BAAQ,EAAE;AAAZ;AAJL,eAAD;AAjBkC,aAA1B,CAAjB;AAwBD;;;iDAEsBpG,I,EAAW;AAChC,gBAAI8G,SAAS,GAAQ,CAAC;AACpBC,kBAAI,EAAE,KADc;AAEpBC,oBAAM,EAAE,QAFY;AAGpBC,yBAAW,EAAE,mDAHO;AAIrB;AACCC,oBAAM,EAAE;AALY,aAAD,EAMnB;AACAH,kBAAI,EAAE,QADN;AAEAC,oBAAM,EAAE,QAFR;AAGAC,yBAAW,EAAE,mDAHb;AAIF;AACEC,oBAAM,EAAE;AALR,aANmB,CAArB;AAcAlH,gBAAI,CAACmH,KAAL,CAAWC,OAAX,CAAmB,UAACC,OAAD,EAAkB;AACnCP,uBAAS,CAAC,CAAD,CAAT,CAAaI,MAAb,CAAoBI,IAApB,CAAyB;AAAEC,sBAAM,EAAEF,OAAO,CAACG,GAAlB;AAAuBC,sBAAM,EAAEJ,OAAO,CAACK;AAAvC,eAAzB;AACAZ,uBAAS,CAAC,CAAD,CAAT,CAAaI,MAAb,CAAoBI,IAApB,CAAyB;AAAEC,sBAAM,EAAEF,OAAO,CAACG,GAAlB;AAAuBC,sBAAM,EAAEJ,OAAO,CAACM;AAAvC,eAAzB;AACD,aAHD;AAMA,iBAAK1C,gBAAL,CAAsB2C,OAAtB,CAA8Bd,SAA9B;AACA,iBAAK7B,gBAAL,CAAsB4C,MAAtB;AACD;;;yCAEc7H,I,EAAW;AACxB,gBAAI8G,SAAS,GAAQ,CAAC;AACpBE,oBAAM,EAAE,KADY;AAEpBC,yBAAW,EAAE,mDAFO;AAGpBa,0BAAY,EAAE,IAHM;AAIpBZ,oBAAM,EAAE,CACN;AAAEK,sBAAM,EAAE,IAAV;AAAgBE,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASC;AAAjC,eADM,EAEN;AACA;AACA;AAAET,sBAAM,EAAE,IAAV;AAAgBE,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASE;AAAjC,eAJM,EAKN;AAAEV,sBAAM,EAAE,IAAV;AAAgBE,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASG;AAAjC,eALM,EAMN;AACA;AAAEX,sBAAM,EAAE,IAAV;AAAgBE,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASI;AAAjC,eAPM,EAQN;AAAEZ,sBAAM,EAAE,IAAV;AAAgBE,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASK;AAAjC,eARM;AAJY,aAAD,CAArB;AAgBA,iBAAKvC,QAAL,CAAc+B,OAAd,CAAsBd,SAAtB;AACA,iBAAKjB,QAAL,CAAcgC,MAAd;AAEA,iBAAKjE,iBAAL,GAAyB5D,IAAI,CAAC+H,GAAL,CAASG,MAAlC;AACD;;;6CAEkBlI,I,EAAW;AAC5B,gBAAIqI,EAAE,GAAQ,CAAC;AACbrB,oBAAM,EAAE,KADK;AAEbC,yBAAW,EAAE,kDAFA;AAGbqB,uBAAS,EAAE,UAHE;AAIbR,0BAAY,EAAE,IAJD;AAKbZ,oBAAM,EAAE,CACN;AAAEK,sBAAM,EAAE,YAAV;AAAwBgB,qBAAK,EAAE,QAA/B;AAAyCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASS;AAA1D,eADM,EAEN;AAAEjB,sBAAM,EAAE,YAAV;AAAwBgB,qBAAK,EAAE,OAA/B;AAAwCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASU;AAAzD,eAFM,EAGN;AAAElB,sBAAM,EAAE,aAAV;AAAyBgB,qBAAK,EAAE,KAAhC;AAAuCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASW;AAAxD,eAHM;AALK,aAAD,CAAd;AAYA,gBAAIjD,GAAG,GAAGkD,IAAI,CAAClD,GAAL,CAASzF,IAAI,CAAC+H,GAAL,CAASS,SAAlB,EAA6BxI,IAAI,CAAC+H,GAAL,CAASU,SAAtC,EAAiDzI,IAAI,CAAC+H,GAAL,CAASW,UAA1D,CAAV;AACA,iBAAKzC,YAAL,CAAkBT,KAAlB,CAAwB,CAAxB,EAA2BC,GAA3B,CAA+BA,GAAG,GAAG,CAArC;AACA,iBAAKQ,YAAL,CAAkB2B,OAAlB,CAA0BS,EAA1B;AACA,iBAAKpC,YAAL,CAAkB4B,MAAlB;AACD;;;yCAEc7H,I,EAAW;AACxB,gBAAIqI,EAAE,GAAQ,CAAC;AACbrB,oBAAM,EAAE,KADK;AAEbC,yBAAW,EAAE,kDAFA;AAGba,0BAAY,EAAE,IAHD;AAIbZ,oBAAM,EAAE,CACN;AAAEK,sBAAM,EAAE,cAAV;AAA0BgB,qBAAK,EAAE,QAAjC;AAA2Cd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASa;AAA5D,eADM,EAEN;AAAErB,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,OAAzB;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASc;AAAnD,eAFM,EAGN;AAAEtB,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,KAAzB;AAAgCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASe;AAAjD,eAHM,EAIN;AAAEvB,sBAAM,EAAE,OAAV;AAAmBgB,qBAAK,EAAE,MAA1B;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASgB;AAAnD,eAJM;AAJK,aAAD,CAAd,CADwB,CAaxB;;AACA,iBAAKxC,QAAL,CAAcqB,OAAd,CAAsBS,EAAtB;AACA,iBAAK9B,QAAL,CAAcsB,MAAd;AACD;;;6CAEkB7H,I,EAAW;AAC5B,gBAAIqI,EAAE,GAAQ,CAAC;AACbrB,oBAAM,EAAE,KADK;AAEbC,yBAAW,EAAE,kDAFA;AAGba,0BAAY,EAAE,IAHD;AAIbZ,oBAAM,EAAE,CACN;AAAEK,sBAAM,EAAE,WAAV;AAAuBgB,qBAAK,EAAE,QAA9B;AAAwCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASiB;AAAzD,eADM,EAEN;AAAEzB,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,OAAzB;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASkB;AAAnD,eAFM,EAGN;AAAE1B,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,KAAzB;AAAgCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASmB;AAAjD,eAHM,EAIN;AAAE3B,sBAAM,EAAE,OAAV;AAAmBgB,qBAAK,EAAE,MAA1B;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASoB;AAAnD,eAJM;AAJK,aAAD,CAAd,CAD4B,CAa5B;;AACA,iBAAKzC,YAAL,CAAkBkB,OAAlB,CAA0BS,EAA1B;AACA,iBAAK3B,YAAL,CAAkBmB,MAAlB;AACD;;;0CAEe7H,I,EAAW;AACzB,gBAAIqI,EAAE,GAAQ,CAAC;AACbrB,oBAAM,EAAE,KADK;AAEbC,yBAAW,EAAE,kDAFA;AAGba,0BAAY,EAAE,IAHD;AAIbZ,oBAAM,EAAE,CACN;AAAEK,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,OAAzB;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASqB;AAAnD,eADM,EAEN;AAAE7B,sBAAM,EAAE,MAAV;AAAkBgB,qBAAK,EAAE,KAAzB;AAAgCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASsB;AAAjD,eAFM,EAGN;AAAE9B,sBAAM,EAAE,OAAV;AAAmBgB,qBAAK,EAAE,MAA1B;AAAkCd,sBAAM,EAAEzH,IAAI,CAAC+H,GAAL,CAASuB;AAAnD,eAHM;AAJK,aAAD,CAAd,CADyB,CAYzB;;AACA,iBAAK3C,SAAL,CAAeiB,OAAf,CAAuBS,EAAvB;AACA,iBAAK1B,SAAL,CAAekB,MAAf;AACD;;;qCAEU0B,G,EAAa;AACtB,gBAAMC,IAAI,GAAmBC,QAAQ,CAACD,IAAtC;AACA,gBAAME,MAAM,GAAGD,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAf;AACAD,kBAAM,CAACE,SAAP,GAAmB,EAAnB;AACAF,kBAAM,CAACG,GAAP,GAAaN,GAAb;AACAG,kBAAM,CAACI,KAAP,GAAe,KAAf;AACAJ,kBAAM,CAACK,KAAP,GAAe,IAAf;AACAP,gBAAI,CAACQ,WAAL,CAAiBN,MAAjB;AACD;;;;;;;yBA/UUjG,e,EAAe,+H,EAAA,uH,EAAA,+H,EAAA,yI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,8nD;AAAA;AAAA;ACjB5B;;AACE;;AACE;;AACA;;AACE;;AAAU;;AAAQ;;AAClB;;AAAM;;AAAyB;;AACjC;;AAEA;;AACE;;AAAU;;AAAQ;;AAClB;;AAAM;;AAAyB;;AACjC;;AACA;;AACE;;AAAU;;AAAU;;AACpB;;AAAM;;AAA8B;;AACtC;;AACA;;AACE;;AAAU;;AAAG;;AACb;;AAAM;;AAAmB;;AAC3B;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AAUF;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;AACC;;AACC;;AACE;;AACE;;AAAsB;;AAAU;;AAAmB;;AACrD;;AACA;;AAGF;;AACA;;AACF;;AACA;;;;AApDsD;;AAAA;;AAG1C;;AAAA;;AAKA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAiBJ;;AAAA;;;;;;;;;wEDlBKA,e,EAAe;gBAN3B,uDAM2B;iBANjB;AACT3C,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAMiB,U;;;;;;;;;;;AACjBvB,gBAAM,EAAE,CAAF;kBAAd;AAAc,WAAE,C;AAERmE,2BAAiB,EAAE,CAAF;kBAAzB;AAAyB,WAAE;;;;;;;;;;;;;;;;;;;AEpB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,UAAMqG,kBAAkB,GAAG,CACzB,wEADyB,EAEzB,oEAFyB,EAGzB,0EAHyB,EAIzB,oEAJyB,EAKzB,sEALyB,EAMzB,8EANyB,EAOzB,wEAPyB,EAQzB,+EARyB,EASzB,sEATyB,EAUzB,2EAVyB,EAWzB,wEAXyB,EAYzB,qEAZyB,EAazB,qEAbyB,EAczB,8EAdyB,EAezB,+EAfyB,CAA3B;;UAsBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAHhB,CAACD,kBAAD,CAGgB,EArBzB,wEAqByB,EApBzB,oEAoByB,EAnBzB,0EAmByB,EAlBzB,oEAkByB,EAjBzB,sEAiByB,EAhBzB,8EAgByB,EAfzB,wEAeyB,EAdzB,+EAcyB,EAbzB,sEAayB,EAZzB,2EAYyB,EAXzB,wEAWyB,EAVzB,qEAUyB,EATzB,qEASyB,EARzB,8EAQyB,EAPzB,+EAOyB;;;;4HAAdC,c,EAAc;AAAA,oBArBzB,wEAqByB,EApBzB,oEAoByB,EAnBzB,0EAmByB,EAlBzB,oEAkByB,EAjBzB,sEAiByB,EAhBzB,8EAgByB,EAfzB,wEAeyB,EAdzB,+EAcyB,EAbzB,sEAayB,EAZzB,2EAYyB,EAXzB,wEAWyB,EAVzB,qEAUyB,EATzB,qEASyB,EARzB,8EAQyB,EAPzB,+EAOyB;AAPP,oBAdlB,wEAckB,EAblB,oEAakB,EAZlB,0EAYkB,EAXlB,oEAWkB,EAVlB,sEAUkB,EATlB,8EASkB,EARlB,wEAQkB,EAPlB,+EAOkB,EANlB,sEAMkB,EALlB,2EAKkB,EAJlB,wEAIkB,EAHlB,qEAGkB,EAFlB,qEAEkB,EADlB,8EACkB,EAAlB,+EAAkB;AAOO,S;AAPP,O;;;;;wEAOPA,c,EAAc;gBAJ1B,sDAI0B;iBAJjB;AACRhH,mBAAO,EAAE,CAAC+G,kBAAD,CADD;AAERE,mBAAO,EAAE,CAACF,kBAAD;AAFD,W;AAIiB,U;;;;;;;;;;;;;;;;;;ACvC3B;AAAA;;;AAAA;AAAA;AAAA;;UAAaG,M;AAUX,wBAAY9J,QAAZ,EAA8B+J,EAA9B,EAA0CC,OAA1C,EAA2DC,SAA3D,EAA8EC,QAA9E,EACEC,iBADF,EAC6BC,aAD7B,EACsDC,eADtD,EAC+E;AAAA;;AAC7E,eAAKrK,QAAL,GAAgBA,QAAhB;AACA,eAAK+J,EAAL,GAAUA,EAAV;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,eAAL,GAAuBA,eAAvB;AACD;AAED;;;;;;;;AAcA;;;;iCAIclL,M,EAAgB;AAC5B,mBAAO,IAAI2K,MAAJ,CAAW,KAAK9J,QAAhB,EAAoCb,MAAM,CAAC6K,OAA3C,EAAoD7K,MAAM,CAAC4K,EAA3D,EAA+D5K,MAAM,CAAC8K,SAAtE,EAAiF9K,MAAM,CAAC+K,QAAxF,EACL/K,MAAM,CAACgL,iBADF,EACqBhL,MAAM,CAACiL,aAD5B,EAC2CjL,MAAM,CAACkL,eADlD,CAAP;AAED;;;gCAlBmBlL,M,EAAa;AAC/B,mBAAO,IAAI2K,MAAJ,CAAW3K,MAAM,CAACa,QAAP,IAA6B,EAAxC,EACLb,MAAM,CAAC4K,EAAP,IAAa,KADR,EAEL5K,MAAM,CAAC6K,OAAP,IAAkB,KAFb,EAGL7K,MAAM,CAAC8K,SAAP,IAAoB,CAHf,EAIL9K,MAAM,CAAC+K,QAAP,IAAmB,KAJd,EAKL/K,MAAM,CAACgL,iBAAP,IAA4B,IALvB,EAMLhL,MAAM,CAACiL,aAAP,IAAwB,IANnB,EAOLjL,MAAM,CAACkL,eAAP,IAA0B,CAPrB,CAAP;AAQD;;;;;;;;;;;;;;;;;;;;;AClCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,CAAvB;;UAeaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBG,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACR7H,mBAAO,EAAE,CAAC,6DAAa8H,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERT,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUac,c;AAGX,gCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAClB,eAAKpJ,IAAL,GAAYF,MAAM,CAACC,QAAP,CAAgBsJ,QAAhB,GAA2B,IAA3B,IAAoCvJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,gBAA1B,GAA8C,gBAA9C,GAAiEF,MAAM,CAACC,QAAP,CAAgBC,IAApH,CAAZ;AACAtB,iBAAO,CAACC,GAAR,CAAY,KAAKqB,IAAjB;AACD;;;;uCAES;AACR;AACA,mBAAO,KAAKoJ,IAAL,CAAUE,GAAV,CAAwB,KAAKtJ,IAAL,GAAY,SAApC,CAAP;AACD;;;oCAESxB,Q,EAAgB;AACxB,mBAAO,KAAK4K,IAAL,CAAUE,GAAV,CAAsB,KAAKtJ,IAAL,GAAY,SAAZ,GAAwBxB,QAA9C,CAAP;AACD;;;uCAEYA,Q,EAAkBb,M,EAAgB;AAC7C,gBAAI8J,GAAG,GAAG,KAAKzH,IAAL,GAAY,gBAAZ,GAA+BxB,QAAzC;AACA,mBAAO,KAAK4K,IAAL,CAAUG,IAAV,CAAuB9B,GAAvB,EAA4B9J,MAA5B,EAAoC6L,IAApC,CAAyC,kEAAW,KAAKC,WAAhB,CAAzC,EAAuEC,SAAvE,EAAP;AACD;;;oCAES/L,M,EAAgB;AACxB,gBAAI8J,GAAG,GAAG,KAAKzH,IAAL,GAAY,YAAtB;AACA,mBAAO,KAAKoJ,IAAL,CAAUG,IAAV,CAAuB9B,GAAvB,EAA4B9J,MAA5B,EAAoC6L,IAApC,CAAyC,kEAAW,KAAKC,WAAhB,CAAzC,EAAuEC,SAAvE,EAAP;AACD;;;sCAEmBC,K,EAA0B;AAC5C,gBAAIA,KAAK,CAACA,KAAN,YAAuBC,UAA3B,EAAuC;AACrC;AACAlL,qBAAO,CAACiL,KAAR,CAAc,oBAAd,EAAoCA,KAAK,CAACA,KAAN,CAAYE,OAAhD;AACD,aAHD,MAGO;AACL;AACA;AACAnL,qBAAO,CAACiL,KAAR,CACE,gCAAyBA,KAAK,CAACG,MAA/B,8BACaH,KAAK,CAACA,KADnB,CADF;AAGD,aAV2C,CAW5C;;;AACA,mBAAO,wDACL,iDADK,CAAP;AAED;;;;;;;yBAzCUR,c,EAAc,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACVxI,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;ACV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY3D,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB+M,eAAzB,CAAyC,yDAAzC,WACS,UAAAnL,GAAG;AAAA,eAAIF,OAAO,CAACiL,KAAR,CAAc/K,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASoL,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkB1L,IAAlB,CAAuB,YAAW;AACxC,cAAIY,CAAC,GAAG,IAAI+K,KAAJ,CAAU,yBAAyBH,GAAzB,GAA+B,GAAzC,CAAR;AACA5K,WAAC,CAACgL,IAAF,GAAS,kBAAT;AACA,gBAAMhL,CAAN;AACA,SAJM,CAAP;AAKA;;AACD2K,8BAAwB,CAACM,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAN,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAO,YAAM,CAAClC,OAAP,GAAiB2B,wBAAjB;AACAA,8BAAwB,CAACQ,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Server } from './../../models/server';\nimport { ServersService } from './../../services/servers.service';\nimport { ServerConfigComponent } from './../server-config/server-config.component';\n\nimport { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ServerComponent } from '../server/server.component';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements AfterViewInit, OnInit {\n  oldServer: Server;\n  selectedServer: Server;\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<Server> = new MatTableDataSource<Server>([]);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private serversService: ServersService,\n    public configDialog: MatDialog,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.serversService.getServers().subscribe(servers => {\n      this.displayedColumns = ['agent_id', 'ip', 'details', 'cpu_count', 'platform', 'delete', 'edit', 'watch']\n      this.dataSource = new MatTableDataSource<Server>(servers);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  openServerEditDialog(server: Server) {\n    let self = this;\n    this.oldServer = server;\n    this.selectedServer = Server.clone(server);\n    const dialogRef = this.configDialog.open(ServerConfigComponent, {\n      data: this.selectedServer,\n      width: '30%',\n      // minHeight: 'calc(100vh - 90px)',\n      height: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.serversService.updateServer(this.oldServer.agent_id as string, this.selectedServer).then(data => {\n          console.log(data);\n          this.oldServer = this.selectedServer;\n        }).catch(err => {\n          console.log('error=', err);\n        });\n      }\n    });\n  }\n\n  viewBtnClick(server: Server) {\n    this.router.navigateByUrl('/server?agent_id=' + server.agent_id);\n  }\n\n  addNewServer() {\n    this.selectedServer = Server.clone({});\n\n    const dialogRef = this.configDialog.open(ServerConfigComponent, {\n      data: this.selectedServer,\n      // width: '50%',\n      // minHeight: 'calc(100vh - 90px)',\n      // height: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.serversService.addServer(this.selectedServer).then(data => {\n          console.log(data);   \n        }).catch(err => {\n          console.log('error=', err);\n        });\n      }\n    });\n  }\n}","<!-- <div *ngFor=\"let server of servers\">\n  <app-server  [server]=\"server\">\n  </app-server>\n</div> -->\n\n<div class=\"mat-elevation-z8\">\n  <button mat-button (click)=\"addNewServer()\">+Add Server</button>\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"agent_id\">\n      <th mat-header-cell *matHeaderCellDef> Server </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.agent_id}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"ip\">\n      <th mat-header-cell *matHeaderCellDef> IP </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.ip}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"details\">\n      <th mat-header-cell *matHeaderCellDef> Details </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.details}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"cpu_count\">\n      <th mat-header-cell *matHeaderCellDef> CPUs </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.cpu_count}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"platform\">\n      <th mat-header-cell *matHeaderCellDef> Platform </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.platform}} </td>\n    </ng-container>\n\n    <!-- Delete Column -->\n    <ng-container matColumnDef=\"delete\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Detach the server\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- Edit Column -->\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Edit the server\" (click)=\"openServerEditDialog(element)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- View Column -->\n    <ng-container matColumnDef=\"watch\">\n      <th mat-header-cell *matHeaderCellDef> </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"warn\" aria-label=\"Watch the server\" (click)=\"viewBtnClick(element);\">\n          <mat-icon>insert_chart</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component, Inject, OnInit, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Server } from './../../models/server';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-server-config',\n  templateUrl: './server-config.component.html',\n  styleUrls: ['./server-config.component.css']\n})\nexport class ServerConfigComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public server: Server) {\n    this.server = server;\n  }\n\n  ngOnInit(): void {\n  }\n\n  setServerProperty(property: string, e: Event) {\n    (this.server as any)[property] = (e.target as HTMLInputElement).value;\n  }\n}\n","<h2 mat-dialog-title>Config Server</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form>\n    <ol>\n      <li class=\"nostyle\">\n        <mat-form-field>\n          <mat-label>Unique Name Of the Server</mat-label>\n          <input matInput [value]=\"server.agent_id\" disabled=\"true\" (change)=\"setServerProperty('agent_id', $event)\">\n        </mat-form-field>\n      </li>\n      <li class=\"nostyle\">\n        <mat-form-field>\n          <mat-label>IP Address(IPv4)</mat-label>\n          <input matInput disabled=\"true\" [value]=\"server.ip\" (change)=\"setServerProperty('ip', $event)\"\n            resizeToFitContent=\"true\">\n        </mat-form-field>\n      </li>\n      <li class=\"nostyle\">\n        <mat-form-field>\n          <mat-label>Details</mat-label>\n          <input matInput [value]=\"server.details\" (change)=\"setServerProperty('details', $event)\"\n            resizeToFitContent=\"true\">\n        </mat-form-field>\n      </li>\n      <li class=\"nostyle\">\n        <mat-form-field>\n          <mat-label>Periodic Data Interval</mat-label>\n          <input matInput [value]=\"server.stats_interval_ms\" (change)=\"setServerProperty('stats_interval_ms', $event)\">\n        </mat-form-field>\n      </li>\n      <li class=\"nostyle\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Process to watch</mat-label>\n          <input matInput [value]=\"server.watch_process\" (change)=\"setServerProperty('watch_process', $event)\">\n        </mat-form-field>\n      </li>\n\n    </ol>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Apply</button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from \"rxjs/webSocket\";\nimport { v4 as uuidV4 } from \"uuid\";\n\n// https://stackoverflow.com/questions/60952255/connecting-a-websocket-in-angular\n\ninterface CallbackDictionary<T> {\n  [Key: string]: T;\n}\n\ninterface EventDictionary<T> {\n  [Key: string]: T;\n}\n\nenum Event {\n  Up = 1,\n  Down,\n  Left,\n  Right,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WsService {\n  ws: WebSocketSubject<string>;\n  callbacks: CallbackDictionary<() => void> = {};\n  events: EventDictionary<Function> = {};\n  host: string;\n\n  constructor() {\n    this.callbacks = {};\n    this.events = {};\n    console.log(window.location.host);\n    this.host = 'ws://' + ((window.location.host === 'localhost:4200') ? 'localhost:2600' : window.location.host);\n    this.ws = webSocket(this.host + '/youknow/ws');\n    this.callbacks = {};\n    this.events = {};\n\n    this.ws.subscribe(\n      (packet)=> {this.onMessage(packet)},\n      err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n      () => { console.log('complete'); } // Called when connection is closed (for whatever reason).\n    );\n  }\n\n  /**\n   * @description send message and receive a response over callback\n   * @param data \n   * @param callback \n   */\n  public send(cmd: string, data: string, callback: () => void) {\n    let packet = { token: uuidV4(), cmd, data }\n    this.ws.next(data);\n    this.callbacks[packet.token] = callback;\n  }\n\n  /**\n   * @description Attach permanent event\n   * @param data \n   * @param callback \n   */\n  public attachEvent(event: string, agent_id: string, callback: Function) {\n    this.events[event] = callback;\n    this.ws.next({ event, agent_id, action: 'subscribe' } as any);\n  }\n\n  /**\n   * @description Attach permanent event\n   * @param data \n   * @param callback \n   */\n  public detachEvent(event: string) {\n    delete this.events[event];\n    this.ws.next({ event, action: 'unsubscribe' } as any);\n  }\n\n  private onMessage(packet: any) {\n    if (packet.token) {\n      this.callbacks[packet.token].call(packet.data);\n      delete this.callbacks[packet.token];\n    } else if (this.events[packet.event]) { // If its not simple function call then it must be event if not detached\n      this.events[packet.event].call(null, packet.data);\n    }\n  }\n}\n","import { Component } from '@angular/core';\ndeclare var google: any;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string = 'YouKnow';\n\n  ngOnInit(): void {\n    google.charts.load('current', { packages: ['corechart', 'bar'] });\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n}\n","<div>\n\n  \n  <!-- <app-servers></app-servers> -->\n  <app-nav-bar [title]='title'></app-nav-bar>\n  <router-outlet></router-outlet>\n  \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ServersComponent } from './components/servers/servers.component';\nimport { ServerComponent } from './components/server/server.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { ServerConfigComponent } from './components/server-config/server-config.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServersComponent,\n    ServerComponent,\n    NavBarComponent,\n    ServerConfigComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  @Input() title: string = '';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <mat-icon>self_improvement</mat-icon>\n  <span >{{title}}</span>\n  <div>\n    <div class=\"small-caption\">The farther you go the less you know. ~ Socrates</div>\n  </div>\n  <span class=\"example-spacer\"></span>\n  <!-- Server Menu -->\n  <button mat-button aria-label=\"Servers\">\n    <mat-icon>desktop_mac</mat-icon>\n    <span> Servers</span>\n  </button>\n\n  <!-- Operations Menu -->\n\n  <button mat-button [matMenuTriggerFor]=\"operationsMenu\" aria-label=\"Operations\">\n    <mat-icon>engineering</mat-icon>\n    <span> Operations</span>\n  </button>\n  <mat-menu #operationsMenu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon>shutter_speed</mat-icon>\n      <span> Watch Realtime</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>switch_camera</mat-icon>\n      <span> Compare Realtime</span>\n    </button>\n  </mat-menu>\n\n  <!-- Performance Menu -->\n  <button mat-button [matMenuTriggerFor]=\"performanceMenu\" aria-label=\"Performance\">\n    <mat-icon>auto_graph</mat-icon>\n    <span> Performance</span>\n  </button>\n  <mat-menu #performanceMenu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon>shutter_speed</mat-icon>\n      <span> Single Server</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>switch_camera</mat-icon>\n      <span> Comparison between 2 Servers</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>analytics</mat-icon>\n      <span> Performance Deep Analysis</span>\n    </button>\n  </mat-menu>\n\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n    <mat-icon>share</mat-icon>\n  </button>\n</mat-toolbar>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Server } from './../../models/server';\nimport { WsService } from './../../services/ws.service';\nimport { ServersService } from './../../services/servers.service';\nimport * as EventTypes from './../../../assets/common/eventTypes.json';\nimport { ChartModel } from './../../models/chartModel';\ndeclare var google: any;\ndeclare var SilverJs: any;\nvar SJ = SilverJs;\nvar Chart = SilverJs.Chart;\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\n\nexport class ServerComponent implements OnInit {\n  @Input() server: Server = new Server('NOC', '', '12', 1, '212', 22, [], 3333);\n  private agent_id: string = '';\n  @Input() idealCPUInPercent: number = 0;\n  private cpuChart: any;\n  private loadAvgChart: any;\n  private ramGraph: any;\n  private swapMemGraph: any;\n  private diskGraph: any;\n  private cpu4ProcessGraph: any;\n\n  private cornerRadius: Array<number> = [7, 7, 7, 7];\n  private shadowEnabled: boolean = true;\n  private borderThickness: number = 0.01;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private wsService: WsService, private serversService: ServersService) {\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: any) => {\n      this.agent_id = params['agent_id'];\n      this.serversService.getServer(this.agent_id).subscribe(server => {\n        this.server = server;\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    let self = this;\n\n    google.charts.setOnLoadCallback(() => {\n      this.createCPUGraph();\n      this.createLoadAvgGraph();\n      this.createRamGraph();\n      this.createSwapMemGraph();\n      this.createDiskGraph();\n      this.createCpu4ProcessGraph();\n\n      this.wsService.attachEvent(EventTypes.OS_UPDATE, this.agent_id, function (data: any) {\n        console.log(data);\n\n        self.updateCPUGraph(data);\n        self.updateCPU4ProcessGraph(data);\n        self.updateLoadAvgGraph(data);\n        self.updateRAMGraph(data);\n        self.updateSwapMemGraph(data);\n        self.updateDiskGraph(data);\n      });\n    });\n  }\n\n  createCpu4ProcessGraph() {\n    this.cpu4ProcessGraph = new Chart(\"cpuChart4ProcessDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: false,//this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      dataPointWidthInPercent: 0.6,\n      padding: [0, 3, 0, -5],\n      // titles: [{ text: \"CPU\", fontSize: 12, fontWeight: 'bold',margin: [0, 5, 0, 0] }],\n      axesY: [{\n        //visible: false,\n        max: 100,\n        min: 0,\n        // interval: 2,\n        axisLineThickness: 0.2,\n      }],\n      axesX: [{\n        axisLineThickness: 0.2\n      }]\n    });\n  }\n\n  createCPUGraph() {\n    this.cpuChart = new Chart(\"cpuChartDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      padding: [0, 3, 0, -5],\n      // titles: [{ text: \"CPU\", fontSize: 12, fontWeight: 'bold',margin: [0, 5, 0, 0] }],\n      axesY: [{\n        visible: false,\n        max: 120,\n        min: 0,\n        interval: 2,\n        axisLineThickness: 0.2,\n      }],\n      axesX: [{\n        tickLength: 1,\n        axisLineThickness: 0.2,\n        title: \"CPU %\"\n      }]\n    });\n  }\n\n  createLoadAvgGraph() {\n    this.loadAvgChart = new Chart(\"loadAvgChartDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      padding: [0, 0, 0, 0],\n      titles: [{ text: \"Load Average\", fontSize: 12, fontWeight: 'bold', padding: [0, 0, 0, 0] }],\n      axesY: [{\n        visible: false,\n        tickEnabled: false,\n        tickLength: 1,\n        min: 0,\n        interval: 2,\n        axisLineThickness: 0.2,\n      }],\n      axesX: [{\n        tickLength: 1,\n        axisLineThickness: 0.2,\n        tickEnabled: false\n      }]\n    });\n  }\n\n  createRamGraph() {\n    this.ramGraph = new Chart(\"ramChartDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      padding: [0, 0, 0, 0],\n      titles: [{ text: \"Physical Memory\", fontSize: 12, fontWeight: 'bold' }],\n      axesY: [{\n        visible: false,\n        min: 0,\n        interval: 4,\n        valueFormat: \"0\",\n        valueFormatRange: [1, 'KB', 1000, 'MB', 1e+6, 'GB']\n      }],\n      axesX: [{\n        axisLineThickness: 0.2,\n        tickLength: 1,\n        tickEnabled: false,\n      }]\n    });\n  }\n\n  createSwapMemGraph() {\n    this.swapMemGraph = new Chart(\"swapChartDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      padding: [0, 0, 0, 0],\n      titles: [{ text: \"Swap Memory\", fontSize: 12, fontWeight: 'bold' }],\n      axesY: [{\n        visible: false,\n        tickEnabled: false,\n        tickLength: 1,\n        axisLineThickness: 0.2,\n        interval: 5,\n        min: 0,\n        valueFormat: \"0\",\n        valueFormatRange: [1, 'KB', 1000, 'MB', 1e+6, 'GB']\n      }],\n      axesX: [{\n        tickEnabled: false,\n        tickLength: 1,\n        axisLineThickness: 0.2\n      }]\n    });\n  }\n\n  createDiskGraph() {\n    this.diskGraph = new Chart(\"diskChartDiv\", {\n      // width: 300, height: 160,\n      border: this.borderThickness,\n      bevel: false,\n      shadow: this.shadowEnabled,\n      borderColor: 'black',\n      cornerRadius: this.cornerRadius,\n      padding: [0, 0, 0, 0],\n      titles: [{ text: \"Disk\", fontSize: 12, fontWeight: 'bold' }],\n      axesY: [{\n        visible: false,\n        includeZero: true,\n        min: 0,\n        axisLineThickness: 0.2,\n        valueFormat: \"0.00\",\n        valueFormatRange: [1, 'MB', 1000, 'GB']\n      }],\n      axesX: [{\n        tickEnabled: false,\n        tickLength: 1,\n        axisLineThickness: 0.2,\n        labelFont: { fontSize: 14 }\n      }]\n    });\n  }\n\n  updateCPU4ProcessGraph(data: any) {\n    var chartData: any = [{\n      name: 'CPU',\n      plotAs: 'column',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}%\",\n     // labelEnabled: true,\n      points: []\n    },{\n      name: 'Memory',\n      plotAs: 'column',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}%\",\n    //  labelEnabled: true,\n      points: []\n    }];\n\n    data.lines.forEach((process: any) => {\n      chartData[0].points.push({ xLabel: process.app, yValue: process.cpu_percent });\n      chartData[1].points.push({ xLabel: process.app, yValue: process.mem_used_percent });\n    });\n\n\n    this.cpu4ProcessGraph.setData(chartData);\n    this.cpu4ProcessGraph.render();\n  }\n\n  updateCPUGraph(data: any) {\n    var chartData: any = [{\n      plotAs: 'bar',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}%\",\n      labelEnabled: true,\n      points: [\n        { xLabel: 'ST', yValue: data.sys.cpu_st, },\n        //{ xLabel: 'si', yValue: data.sys.cpu_si },\n        //{ xLabel: 'hi', yValue: data.sys.cpu_hi },\n        { xLabel: 'WA', yValue: data.sys.cpu_wa },\n        { xLabel: 'ID', yValue: data.sys.cpu_id },\n        // { xLabel: 'ni', yValue: data.sys.cpu_ni },\n        { xLabel: 'SY', yValue: data.sys.cpu_sy },\n        { xLabel: 'US', yValue: data.sys.cpu_us },\n      ]\n    }];\n\n    this.cpuChart.setData(chartData);\n    this.cpuChart.render();\n\n    this.idealCPUInPercent = data.sys.cpu_id;\n  }\n\n  updateLoadAvgGraph(data: any) {\n    var ds: any = [{\n      plotAs: 'bar',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}\",\n      labelText: \"{yValue}\",\n      labelEnabled: true,\n      points: [\n        { xLabel: 'LoadAvg 1m', color: \"orange\", yValue: data.sys.load_avg1 },\n        { xLabel: 'LoadAvg 5m', color: \"green\", yValue: data.sys.load_avg5 },\n        { xLabel: 'LoadAvg 15m', color: \"red\", yValue: data.sys.load_avg15 }\n      ]\n    }];\n\n    let max = Math.max(data.sys.load_avg1, data.sys.load_avg5, data.sys.load_avg15);\n    this.loadAvgChart.axesY[0].max(max + 1);\n    this.loadAvgChart.setData(ds);\n    this.loadAvgChart.render();\n  }\n\n  updateRAMGraph(data: any) {\n    var ds: any = [{\n      plotAs: 'bar',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}\",\n      labelEnabled: true,\n      points: [\n        { xLabel: 'Buffer/Cache', color: \"orange\", yValue: data.sys.mem_buff_cache },\n        { xLabel: 'Free', color: \"green\", yValue: data.sys.mem_free },\n        { xLabel: 'Used', color: \"red\", yValue: data.sys.mem_used },\n        { xLabel: 'Total', color: \"gray\", yValue: data.sys.mem_total }\n      ]\n    }];\n\n    // this.ramGraph.axesY[0].max(data.sys.mem_total);\n    this.ramGraph.setData(ds);\n    this.ramGraph.render();\n  }\n\n  updateSwapMemGraph(data: any) {\n    var ds: any = [{\n      plotAs: 'bar',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}\",\n      labelEnabled: true,\n      points: [\n        { xLabel: 'Available', color: \"orange\", yValue: data.sys.mem_swap_avail },\n        { xLabel: 'Free', color: \"green\", yValue: data.sys.mem_swap_free },\n        { xLabel: 'Used', color: \"red\", yValue: data.sys.mem_swap_used },\n        { xLabel: 'Total', color: \"gray\", yValue: data.sys.mem_swap_total },\n      ]\n    }];\n\n    //this.swapMemGraph.axesY[0].max(Math.max(data.sys.mem_swap_total, data.sys.mem_swap_avail));\n    this.swapMemGraph.setData(ds);\n    this.swapMemGraph.render();\n  }\n\n  updateDiskGraph(data: any) {\n    var ds: any = [{\n      plotAs: 'bar',\n      tooltipText: \"<b style='color:{color};'>{xLabel}</b>: {yValue}\",\n      labelEnabled: true,\n      points: [\n        { xLabel: 'Free', color: \"green\", yValue: data.sys.disk_free },\n        { xLabel: 'Used', color: \"red\", yValue: data.sys.disk_used },\n        { xLabel: 'Total', color: \"gray\", yValue: data.sys.disk_total },\n      ]\n    }];\n\n    //this.diskGraph.axesY[0].max(data.sys.disk_total);\n    this.diskGraph.setData(ds);\n    this.diskGraph.render();\n  }\n\n  loadScript(url: string) {\n    const body = <HTMLDivElement>document.body;\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    script.src = url;\n    script.async = false;\n    script.defer = true;\n    body.appendChild(script);\n  }\n}\n","<div class=\"container\">\n  <div class=\"header-display hot-linear-gradient\">\n    <div id=\"hotness\" class=\"color-layer child-right\" [ngStyle]=\"{'width.%': idealCPUInPercent}\"></div>\n    <button mat-button color=\"primary\" aria-label=\"Platform\">\n      <mat-icon>computer</mat-icon>\n      <span>&nbsp;{{server.agent_id}}</span>\n    </button>\n\n    <button mat-button aria-label=\"Platform\">\n      <mat-icon>business</mat-icon>\n      <span>&nbsp;{{server.platform}}</span>\n    </button>\n    <button mat-button aria-label=\"CPU Count\">\n      <mat-icon>select_all</mat-icon>\n      <span>&nbsp;{{server.cpu_count}} CPU</span>\n    </button>\n    <button mat-button aria-label=\"IP Address\">\n      <mat-icon>dns</mat-icon>\n      <span>&nbsp;{{server.ip}}</span>\n    </button>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <mat-nav-list fxLayout>\n    <div id=\"cpuChartDiv\" mat-list-item class=\"nano-chart\">\n      <img src=\"assets/icons/info-24px.svg\" matTooltip=\"Info about the action\" class=\"infoIcon\" #tooltip=\"matTooltip\"\n        matTooltip=\"US: User cpu time (or) % CPU time spent in user space \\n&#x2022;\nSY: System cpu time (or) % CPU time spent in kernel space \\n&#x2022;\nNI: User nice cpu time (or) % CPU time spent on low priority processes &#x2022;\nID: Idle cpu time (or) % CPU time spent idle &#x2022;\nWA: I/O wait cpu time (or) % CPU time spent in wait (on disk) &#x2022;\nHI: Hardware irq (or) % CPU time spent servicing/handling hardware interrupts &#x2022;\nSI: Software irq (or) % CPU time spent servicing/handling software interrupts &#x2022;\nST: Steal time - - % CPU time in involuntary wait by virtual cpu while hypervisor is servicing another processor (or) % CPU time stolen from a virtual machine\"\n        [matTooltipClass]=\"'my-tooltip'\" matTooltipPosition=\"right\" matTooltipHideDelay=\"100000\">\n    </div>\n    <div id=\"loadAvgChartDiv\" mat-list-item class=\"nano-chart\"></div>\n    <div id=\"ramChartDiv\" mat-list-item class=\"nano-chart\"></div>\n    <div id=\"swapChartDiv\" mat-list-item class=\"nano-chart\"></div>\n    <div id=\"diskChartDiv\" mat-list-item class=\"nano-chart\"></div>\n  </mat-nav-list>\n<br>\n <mat-expansion-panel class=\"fullWidth\" hideToggle>\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      REAL TIME CPU PROCESS <mat-icon>keyboard_arrow_down</mat-icon>\n    </mat-panel-title>\n    <mat-panel-description>\n      \n    </mat-panel-description>\n  </mat-expansion-panel-header>\n  <div id=\"cpuChart4ProcessDiv\" class=\"full-width-chart\"></div>\n</mat-expansion-panel>\n</div>\n\n\n<!-- <h2>{{server.watch_process}}</h2> -->","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatMenuModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatTooltipModule,\n  BrowserModule,\n  MatListModule,\n  MatCardModule,\n  MatGridListModule,\n  MatExpansionModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule { }\n","export class Server {\n  agent_id?: string;\n  ip: string;\n  details: string;\n  cpu_count: number;\n  platform: string;\n  stats_interval_ms: number;\n  watch_process: string[];\n  last_updated_ts: number;\n\n  constructor(agent_id: string, ip: string, details: string, cpu_count: number, platform: string,\n    stats_interval_ms: number, watch_process: string[], last_updated_ts: number) {\n    this.agent_id = agent_id;\n    this.ip = ip;\n    this.details = details;\n    this.cpu_count = cpu_count;\n    this.platform = platform;\n    this.stats_interval_ms = stats_interval_ms;\n    this.watch_process = watch_process;\n    this.last_updated_ts = last_updated_ts;\n  }\n\n  /**\n   * @description Clone this server object\n   */\n  public static clone(server: any) {\n    return new Server(server.agent_id as string || '',\n      server.ip || 'N/A',\n      server.details || 'N/A',\n      server.cpu_count || 0,\n      server.platform || 'N/A',\n      server.stats_interval_ms || 5000,\n      server.watch_process || '[]',\n      server.last_updated_ts || 0);\n  }\n\n  /**\n   * @description Update reference of this server with the updated data\n   * @param server \n   */\n  public update(server: Server) {\n    return new Server(this.agent_id as string, server.details, server.ip, server.cpu_count, server.platform,\n      server.stats_interval_ms, server.watch_process, server.last_updated_ts);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ServersComponent } from './components/servers/servers.component';\nimport { ServerComponent } from './components/server/server.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServersComponent\n  },\n  {\n    path: 'server',\n    component: ServerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Server } from './../models/server';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServersService {\n  host: string;\n\n  constructor(private http: HttpClient) {\n    this.host = window.location.protocol + '//' + ((window.location.host === 'localhost:4200') ? 'localhost:2600' : window.location.host);\n    console.log(this.host);\n  }\n\n  getServers(): Observable<Server[]> {\n    // https://stackoverflow.com/questions/49297680/angular-5-get-host-name-and-app-name-from-url\n    return this.http.get<Server[]>(this.host + '/agents');\n  }\n\n  getServer(agent_id: string): Observable<Server> {\n    return this.http.get<Server>(this.host + '/agent/' + agent_id);\n  }\n  \n  updateServer(agent_id: string, server: Server) {\n    let url = this.host + '/agent/update/' + agent_id;\n    return this.http.post<Server>(url, server).pipe(catchError(this.handleError)).toPromise();\n  }\n\n  addServer(server: Server) {\n    let url = this.host + '/agent/add';\n    return this.http.post<Server>(url, server).pipe(catchError(this.handleError)).toPromise();\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}